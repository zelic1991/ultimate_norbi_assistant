name: Bot Self-Work (Nightly)

on:
  schedule:
    - cron: "0 2 * * *" # täglich 02:00 UTC
  workflow_dispatch:
    inputs:
      spec:
        description: "Spec JSON path"
        required: false
        default: "prompts/specs/next.json"
      target:
        description: "Target file"
        required: false
        default: "generated_module.py"

permissions:
  contents: write
  pull-requests: write

jobs:
  nightly:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}
      SPEC: ${{ inputs.spec || 'prompts/specs/next.json' }}
      TARGET: ${{ inputs.target || 'generated_module.py' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m pip install -U pip
          python -m pip install pytest orjson pyyaml openai

      - name: Make branch name
        id: name
        run: |
          TS=$(date -u +%Y%m%d)
          echo "branch=bot/nightly-${TS}" >> "$GITHUB_OUTPUT"

      - name: Verify secrets
        run: |
          if [ -z "${OPENAI_API_KEY}" ]; then
            echo "::error::OPENAI_API_KEY not set"; exit 1
          fi
          # BASE_URL ist optional; nur ausgeben
          echo "BASE_URL=${OPENAI_BASE_URL:-<default>}"

      # ci_selfwork.py MUSS Outputs setzen: draft_path, preview_path, critic_level, ts, adds, rems
      - name: Create draft (next.json)
        id: ci
        env:
          OPENAI_API_KEY: ${{ env.OPENAI_API_KEY }}
          OPENAI_BASE_URL: ${{ env.OPENAI_BASE_URL }}
          SPEC_PATH: ${{ env.SPEC }}
          TARGET: ${{ env.TARGET }}
        run: python scripts/ci_selfwork.py

      - name: What-If (log only)
        run: python apply_draft.py --draft "${{ steps.ci.outputs.draft_path }}" --whatif || true

      - name: Apply (Green only)
        if: steps.ci.outputs.critic_level == 'Green'
        run: python apply_draft.py --draft "${{ steps.ci.outputs.draft_path }}" --approve

      - name: Create PR (Green only)
        if: steps.ci.outputs.critic_level == 'Green'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: ${{ steps.name.outputs.branch }}
          commit-message: "bot(nightly): apply draft ${{ steps.ci.outputs.ts }} (+${{ steps.ci.outputs.adds }}/-${{ steps.ci.outputs.rems }}) [critic=Green]"
          title: "Bot Nightly: ${{ steps.ci.outputs.ts }} (Green)"
          body: |
            Nightly self-work
            - Δ: +${{ steps.ci.outputs.adds }} / -${{ steps.ci.outputs.rems }}
            - Critic: `Green`
            - Draft: `${{ steps.ci.outputs.draft_path }}`
          labels: bot-nightly, bot-apply
          signoff: false
          delete-branch: true
